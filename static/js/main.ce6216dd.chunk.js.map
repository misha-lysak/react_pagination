{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","selectedPage","props","page","inPageChange","setState","target","innerText","prevPage","nextPage","Math","ceil","total","perPage","this","totalPages","pages","Array","from","_","index","aria-label","className","onClick","classNames","disabled","href","map","key","active","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAb,4MACEC,MAAQ,CACNC,aAAc,EAAKC,MAAMC,MAF7B,EAKEC,aAAe,SAACD,GACd,EAAKE,SAAS,CACZJ,cAAeE,EAAKG,OAAOC,aAPjC,EAWEC,SAAW,SAACL,GACsB,IAA5B,EAAKH,MAAMC,cAIf,EAAKI,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAcD,EAAMC,aAAe,OAjBzC,EAqBEQ,SAAW,SAACN,GACN,EAAKH,MAAMC,eACTS,KAAKC,KAAK,EAAKT,MAAMU,MAAQ,EAAKV,MAAMW,UAK9C,EAAKR,UAAS,SAAAL,GAAK,MAAK,CACtBC,aAAcD,EAAMC,aAAe,OA7BzC,4CAiCE,WAAU,IAAD,SACoBa,KAAKZ,MAAxBU,EADD,EACCA,MAAOC,EADR,EACQA,QACPZ,EAAiBa,KAAKd,MAAtBC,aAEFc,EAAaL,KAAKC,KAAKC,EAAQC,GAC/BG,EAAQC,MAAMC,KAAKD,MAAMF,IAAa,SAACI,EAAGC,GAAJ,OAAcA,EAAQ,KAElE,OACE,6BACE,yBAAKC,aAAW,2BACd,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,aACZ,uBACEC,QAAST,KAAKN,SACdc,UAAWE,IAAW,gBAAiB,CACrCC,SAA2B,IAAjBxB,IAEZyB,KAAI,WAAMzB,IALZ,aAUDe,EAAMW,KAAI,SAAAxB,GAAI,OACb,wBAAIyB,IAAKzB,EAAMmB,UAAU,aACvB,uBACEC,QAAS,EAAKnB,aACdkB,UAAWE,IAAW,YAAa,CACjCK,OAAQ,EAAK7B,MAAMC,eAAiBE,IAEtCuB,KAAI,WAAMvB,IAETA,OAIP,wBAAImB,UAAU,aACZ,uBACEC,QAAST,KAAKL,SACda,UAAWE,IAAW,gBAAiB,CACrCC,SAAUxB,IAAiBc,IAE7BW,KAAI,WAAMzB,IALZ,WAYLA,EAAe,GACd,kFAlFV,GAAgC6B,IAAMC,WCqBvBC,G,kNApBbhC,MAAQ,CACNY,MAAO,GACPC,QAAS,EACTV,KAAM,G,4CAGR,WACE,OACE,6BACE,kBAAC,EAAD,CACEmB,UAAU,aACVV,MAAOE,KAAKd,MAAMY,MAClBC,QAASC,KAAKd,MAAMa,QACpBV,KAAMW,KAAKd,MAAMG,Y,GAdT2B,IAAMC,YCAxBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ce6216dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class Pagination extends React.Component {\n  state = {\n    selectedPage: this.props.page,\n  }\n\n  inPageChange = (page) => {\n    this.setState({\n      selectedPage: +page.target.innerText,\n    });\n  }\n\n  prevPage = (page) => {\n    if (this.state.selectedPage === 1) {\n      return;\n    }\n\n    this.setState(state => ({\n      selectedPage: state.selectedPage - 1,\n    }));\n  }\n\n  nextPage = (page) => {\n    if (this.state.selectedPage\n      === Math.ceil(this.props.total / this.props.perPage)\n    ) {\n      return;\n    }\n\n    this.setState(state => ({\n      selectedPage: state.selectedPage + 1,\n    }));\n  }\n\n  render() {\n    const { total, perPage } = this.props;\n    const { selectedPage } = this.state;\n\n    const totalPages = Math.ceil(total / perPage);\n    const pages = Array.from(Array(totalPages), (_, index) => index + 1);\n\n    return (\n      <div>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <a\n                onClick={this.prevPage}\n                className={classNames('page-link-btn', {\n                  disabled: selectedPage === 1,\n                })}\n                href={`#${selectedPage}`}\n              >\n                Previous\n              </a>\n            </li>\n            {pages.map(page => (\n              <li key={page} className=\"page-item\">\n                <a\n                  onClick={this.inPageChange}\n                  className={classNames('page-link', {\n                    active: this.state.selectedPage === page,\n                  })}\n                  href={`#${page}`}\n                >\n                  {page}\n                </a>\n              </li>\n            ))}\n            <li className=\"page-item\">\n              <a\n                onClick={this.nextPage}\n                className={classNames('page-link-btn', {\n                  disabled: selectedPage === totalPages,\n                })}\n                href={`#${selectedPage}`}\n              >\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n        {selectedPage > 4 && (\n          <p>u can take some info from this small paragraph</p>\n        )}\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  selectedPage: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  }\n\n  render() {\n    return (\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={this.state.total}\n          perPage={this.state.perPage}\n          page={this.state.page}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}