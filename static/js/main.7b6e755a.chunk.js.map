{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","total","perPage","page","inPageChange","prevPage","nextPage","totalPages","Math","ceil","pages","Array","from","_","index","aria-label","className","onClick","classNames","disabled","href","map","pageItem","key","active","value","App","state","pageTarget","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAa,SAAC,GAOpB,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMC,EAAaC,KAAKC,KAAKR,EAAQC,GAC/BQ,EAAQC,MAAMC,KAAKD,MAAMJ,IAAa,SAACM,EAAGC,GAAJ,OAAcA,EAAQ,KAElE,OACE,6BACE,yBAAKC,aAAW,2BACd,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,aACZ,uBACEC,QAASZ,EACTW,UAAWE,IAAW,gBAAiB,CACrCC,SAAmB,IAAThB,IAEZiB,KAAI,WAAMjB,IALZ,aAUDO,EAAMW,KAAI,SAAAC,GAAQ,OACjB,wBAAIC,IAAKD,EAAUN,UAAU,aAC3B,uBACEC,QAASb,EACTY,UAAWE,IAAW,YAAa,CACjCM,OAAQrB,IAASmB,IAEnBG,MAAOH,EACPF,KAAI,WAAME,IAETA,OAIP,wBAAIN,UAAU,aACZ,uBACEC,QAASX,EACTU,UAAWE,IAAW,gBAAiB,CACrCC,SAAUhB,IAASI,IAErBa,KAAI,WAAMjB,IALZ,WAYLA,EAAOD,GACN,+ECFOwB,G,kNAnDbC,MAAQ,CACN1B,MAAO,GACPC,QAAS,EACTC,KAAM,G,EAGRC,aAAe,SAACwB,GACd,EAAKC,SAAS,CACZ1B,KAAMyB,EAAWH,S,EAIrBpB,SAAW,SAACF,GACc,IAApB,EAAKwB,MAAMxB,MAIf,EAAK0B,UAAS,SAAAC,GAAS,MAAK,CAC1B3B,KAAM2B,EAAU3B,KAAO,O,EAI3BG,SAAW,SAACH,GACN,EAAKwB,MAAMxB,OACbK,KAAKC,KAAK,EAAKkB,MAAM1B,MAAQ,EAAK0B,MAAMzB,UAK1C,EAAK2B,UAAS,SAAAC,GAAS,MAAK,CAC1B3B,KAAM2B,EAAU3B,KAAO,O,4CAI3B,WACE,OACE,6BACE,kBAAC,EAAD,CACEa,UAAU,aACVf,MAAO8B,KAAKJ,MAAM1B,MAClBC,QAAS6B,KAAKJ,MAAMzB,QACpBC,KAAM4B,KAAKJ,MAAMxB,KACjBC,aAAc2B,KAAK3B,aACnBC,SAAU0B,KAAK1B,SACfC,SAAUyB,KAAKzB,gB,GA7CP0B,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7b6e755a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Pagination = ({\n  total,\n  perPage,\n  page,\n  inPageChange,\n  prevPage,\n  nextPage,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = Array.from(Array(totalPages), (_, index) => index + 1);\n\n  return (\n    <div>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <a\n              onClick={prevPage}\n              className={classNames('page-link-btn', {\n                disabled: page === 1,\n              })}\n              href={`#${page}`}\n            >\n              Previous\n            </a>\n          </li>\n          {pages.map(pageItem => (\n            <li key={pageItem} className=\"page-item\">\n              <a\n                onClick={inPageChange}\n                className={classNames('page-link', {\n                  active: page === pageItem,\n                })}\n                value={pageItem}\n                href={`#${pageItem}`}\n              >\n                {pageItem}\n              </a>\n            </li>\n          ))}\n          <li className=\"page-item\">\n            <a\n              onClick={nextPage}\n              className={classNames('page-link-btn', {\n                disabled: page === totalPages,\n              })}\n              href={`#${page}`}\n            >\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n      {page > perPage && (\n        <p>u can take some info from this small paragraph</p>\n      )}\n    </div>\n  );\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  inPageChange: PropTypes.func.isRequired,\n  prevPage: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  }\n\n  inPageChange = (pageTarget) => {\n    this.setState({\n      page: pageTarget.value,\n    });\n  }\n\n  prevPage = (page) => {\n    if (this.state.page === 1) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      page: prevState.page - 1,\n    }));\n  }\n\n  nextPage = (page) => {\n    if (this.state.page === (\n      Math.ceil(this.state.total / this.state.perPage)\n    )) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={this.state.total}\n          perPage={this.state.perPage}\n          page={this.state.page}\n          inPageChange={this.inPageChange}\n          prevPage={this.prevPage}\n          nextPage={this.nextPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}