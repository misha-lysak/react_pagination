{"version":3,"sources":["components/Pagination/Pagination.jsx","App.js","index.js"],"names":["Pagination","state","this","props","total","perPage","page","inPageChange","prevPage","nextPage","totalPages","Math","ceil","pages","Array","from","_","index","aria-label","className","onClick","classNames","disabled","href","map","pageItem","key","active","React","Component","App","setState","target","innerText","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAb,4MACEC,MAAQ,GADV,4CAIE,WAAU,IAAD,EAQHC,KAAKC,MANPC,EAFK,EAELA,MACAC,EAHK,EAGLA,QACAC,EAJK,EAILA,KACAC,EALK,EAKLA,aACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,SAGIC,EAAaC,KAAKC,KAAKR,EAAQC,GAC/BQ,EAAQC,MAAMC,KAAKD,MAAMJ,IAAa,SAACM,EAAGC,GAAJ,OAAcA,EAAQ,KAElE,OACE,6BACE,yBAAKC,aAAW,2BACd,wBAAIC,UAAU,cACZ,wBAAIA,UAAU,aACZ,uBACEC,QAASZ,EACTW,UAAWE,IAAW,gBAAiB,CACrCC,SAAmB,IAAThB,IAEZiB,KAAI,WAAMjB,IALZ,aAUDO,EAAMW,KAAI,SAAAC,GAAQ,OACjB,wBAAIC,IAAKD,EAAUN,UAAU,aAC3B,uBACEC,QAASb,EACTY,UAAWE,IAAW,YAAa,CACjCM,OAAQrB,IAASmB,IAEnBF,KAAI,WAAME,IAETA,OAIP,wBAAIN,UAAU,aACZ,uBACEC,QAASX,EACTU,UAAWE,IAAW,gBAAiB,CACrCC,SAAUhB,IAASI,IAErBa,KAAI,WAAMjB,IALZ,WAYLA,EAAOD,GACN,kFA3DV,GAAgCuB,IAAMC,WCoDvBC,G,kNAnDb7B,MAAQ,CACNG,MAAO,GACPC,QAAS,EACTC,KAAM,G,EAGRC,aAAe,SAACD,GACd,EAAKyB,SAAS,CACZzB,MAAOA,EAAK0B,OAAOC,a,EAIvBzB,SAAW,SAACF,GACc,IAApB,EAAKL,MAAMK,MAIf,EAAKyB,UAAS,SAAA9B,GAAK,MAAK,CACtBK,KAAML,EAAMK,KAAO,O,EAIvBG,SAAW,SAACH,GACN,EAAKL,MAAMK,OACTK,KAAKC,KAAK,EAAKX,MAAMG,MAAQ,EAAKH,MAAMI,UAK9C,EAAK0B,UAAS,SAAA9B,GAAK,MAAK,CACtBK,KAAML,EAAMK,KAAO,O,4CAIvB,WACE,OACE,6BACE,kBAAC,EAAD,CACEa,UAAU,aACVf,MAAOF,KAAKD,MAAMG,MAClBC,QAASH,KAAKD,MAAMI,QACpBC,KAAMJ,KAAKD,MAAMK,KACjBC,aAAcL,KAAKK,aACnBC,SAAUN,KAAKM,SACfC,SAAUP,KAAKO,gB,GA7CPmB,IAAMC,YCAxBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1202e94b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class Pagination extends React.Component {\n  state = {\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n      inPageChange,\n      prevPage,\n      nextPage\n    } = this.props;\n\n    const totalPages = Math.ceil(total / perPage);\n    const pages = Array.from(Array(totalPages), (_, index) => index + 1);\n\n    return (\n      <div>\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <a\n                onClick={prevPage}\n                className={classNames('page-link-btn', {\n                  disabled: page === 1,\n                })}\n                href={`#${page}`}\n              >\n                Previous\n              </a>\n            </li>\n            {pages.map(pageItem => (\n              <li key={pageItem} className=\"page-item\">\n                <a\n                  onClick={inPageChange}\n                  className={classNames('page-link', {\n                    active: page === pageItem,\n                  })}\n                  href={`#${pageItem}`}\n                >\n                  {pageItem}\n                </a>\n              </li>\n            ))}\n            <li className=\"page-item\">\n              <a\n                onClick={nextPage}\n                className={classNames('page-link-btn', {\n                  disabled: page === totalPages,\n                })}\n                href={`#${page}`}\n              >\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n        {page > perPage && (\n          <p>u can take some info from this small paragraph</p>\n        )}\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  inPageChange: PropTypes.func.isRequired,\n  prevPage: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Pagination } from './components/Pagination';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  }\n\n  inPageChange = (page) => {\n    this.setState({\n      page: +page.target.innerText,\n    });\n  }\n\n  prevPage = (page) => {\n    if (this.state.page === 1) {\n      return;\n    }\n\n    this.setState(state => ({\n      page: state.page - 1,\n    }));\n  }\n\n  nextPage = (page) => {\n    if (this.state.page\n      === Math.ceil(this.state.total / this.state.perPage)\n    ) {\n      return;\n    }\n\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Pagination\n          className=\"pagination\"\n          total={this.state.total}\n          perPage={this.state.perPage}\n          page={this.state.page}\n          inPageChange={this.inPageChange}\n          prevPage={this.prevPage}\n          nextPage={this.nextPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}